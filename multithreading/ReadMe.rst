===================
Многопоточность
===================

Описание
--------
Многопоточное программирования на Go:

Горутина — это lightweight-поток выполнения, реализованный на уровне языка программирования (например, в Go). В отличие от традиционных потоков операционной системы, горутины потребляют значительно меньше ресурсов и управляются не ОС, а средой выполнения языка.

В виду простоты практического использования/запуска одной горутины, пример с 2 горутинами без каких либо особенностей опущен. В примерах рассматриваются: cостояние гонки (data race), взаимоблокировка (deadlock) и их решение с использованием mutex и condition variables.


Mutex и Condition Variable
_________________________
Демонстрирует правильную синхронизацию с использованием mutex и condition variable.

- sync.Mutex: безопасный доступ к счетчику
- sync.Cond: для сигнализации об изменении состояния

Deadlock
____________
Показывает пример взаимоблокировки между двумя горутинами.

- Две горутины ждут данные друг от друга
- Таймер для определения взаимоблокировки
- Автоматическое завершение через 10 секунд

Data Race
___________________
Демонстрирует проблему состояния гонки при параллельном доступе к общим данным.

- 100 горутин
- 10 инкрементов в каждой горутине
- Отсутствие синхронизации
- Непредсказуемый результат

